@startuml Strategy
!include ../style/style.pu

class Context

interface Strategy <<interface>> {
  +algorithmInterface()
}

class ConcreteStrategyA {
  +algorithmInterface()
}

class ConcreteStrategyB {
  +algorithmInterface()
}

class ConcreteStrategyC {
  +algorithmInterface()
}

Context o-right- Strategy

ConcreteStrategyA .up.|> Strategy
ConcreteStrategyB .up.|> Strategy
ConcreteStrategyC .up.|> Strategy

note as floatingNote
  to pass different parameters to the
  various strategies you need a
  slightly modified version.

  functional programming can implement
  this pattern using higher-order functions
end note

@enduml
