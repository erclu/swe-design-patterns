@startuml Decorator
!include ../style/style.pu

class Client

interface Component <<interface>> {
  +operation()
}

class ConcreteComponent {
  +operation()
}

together {
  abstract class Decorator {
    +operation()
  }

  class ConcreteDecoratorA {
    -addedState
    +operation()
  }

  class ConcreteDecoratorB {
    +operation()
    +addedBehavior()
  }

  Decorator <|-- ConcreteDecoratorA
  Decorator <|-- ConcreteDecoratorB
}

ConcreteComponent -[hidden]- Decorator

Component .right.|> ConcreteComponent
Component .right.|> Decorator

Client -right-> Component

note right of Decorator::operation()
  component->operation()
end note

@enduml
